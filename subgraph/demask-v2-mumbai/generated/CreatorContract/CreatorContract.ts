// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ChangeUriWithVote extends ethereum.Event {
  get params(): ChangeUriWithVote__Params {
    return new ChangeUriWithVote__Params(this);
  }
}

export class ChangeUriWithVote__Params {
  _event: ChangeUriWithVote;

  constructor(event: ChangeUriWithVote) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get uri(): string {
    return this._event.parameters[1].value.toString();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Launchpad extends ethereum.Event {
  get params(): Launchpad__Params {
    return new Launchpad__Params(this);
  }
}

export class Launchpad__Params {
  _event: Launchpad;

  constructor(event: Launchpad) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bill(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class LaunchpadSubmit extends ethereum.Event {
  get params(): LaunchpadSubmit__Params {
    return new LaunchpadSubmit__Params(this);
  }
}

export class LaunchpadSubmit__Params {
  _event: LaunchpadSubmit;

  constructor(event: LaunchpadSubmit) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get initial(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalSell(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get percentLock(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get priceListing(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get tokenPayment(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get durationLock(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get maxbuy(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get refundType(): boolean {
    return this._event.parameters[12].value.toBoolean();
  }

  get whiteList(): boolean {
    return this._event.parameters[13].value.toBoolean();
  }

  get url(): string {
    return this._event.parameters[14].value.toString();
  }

  get data(): Bytes {
    return this._event.parameters[15].value.toBytes();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[16].value.toBigInt();
  }
}

export class MintWithVote extends ethereum.Event {
  get params(): MintWithVote__Params {
    return new MintWithVote__Params(this);
  }
}

export class MintWithVote__Params {
  _event: MintWithVote;

  constructor(event: MintWithVote) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get totalMint(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UserVote extends ethereum.Event {
  get params(): UserVote__Params {
    return new UserVote__Params(this);
  }
}

export class UserVote__Params {
  _event: UserVote;

  constructor(event: UserVote) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get option(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get count(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class VoteMintSubmit extends ethereum.Event {
  get params(): VoteMintSubmit__Params {
    return new VoteMintSubmit__Params(this);
  }
}

export class VoteMintSubmit__Params {
  _event: VoteMintSubmit;

  constructor(event: VoteMintSubmit) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalMint(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get currentSupply(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get count(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class VoteUriSubmit extends ethereum.Event {
  get params(): VoteUriSubmit__Params {
    return new VoteUriSubmit__Params(this);
  }
}

export class VoteUriSubmit__Params {
  _event: VoteUriSubmit;

  constructor(event: VoteUriSubmit) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[2].value.toString();
  }

  get startTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get currentSupply(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get count(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class CreatorContract__votemintResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: boolean;
  value9: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: boolean,
    value9: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    return map;
  }

  getCreator(): Address {
    return this.value0;
  }

  getReceiver(): Address {
    return this.value1;
  }

  getId(): BigInt {
    return this.value2;
  }

  getStartTime(): BigInt {
    return this.value3;
  }

  getEndTime(): BigInt {
    return this.value4;
  }

  getTotalMint(): BigInt {
    return this.value5;
  }

  getTotalVote(): BigInt {
    return this.value6;
  }

  getCurrentSupply(): BigInt {
    return this.value7;
  }

  getStatusUnlock(): boolean {
    return this.value8;
  }

  getStatusMint(): boolean {
    return this.value9;
  }
}

export class CreatorContract__voteuriResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: string;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;
  value8: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: string,
    value5: BigInt,
    value6: BigInt,
    value7: boolean,
    value8: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    return map;
  }

  getCreator(): Address {
    return this.value0;
  }

  getId(): BigInt {
    return this.value1;
  }

  getStartTime(): BigInt {
    return this.value2;
  }

  getEndTime(): BigInt {
    return this.value3;
  }

  getUri(): string {
    return this.value4;
  }

  getTotalVote(): BigInt {
    return this.value5;
  }

  getCurrentSupply(): BigInt {
    return this.value6;
  }

  getStatusUnlock(): boolean {
    return this.value7;
  }

  getStatusUri(): boolean {
    return this.value8;
  }
}

export class CreatorContract extends ethereum.SmartContract {
  static bind(address: Address): CreatorContract {
    return new CreatorContract("CreatorContract", address);
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  countVoteMint(param0: BigInt): BigInt {
    let result = super.call(
      "countVoteMint",
      "countVoteMint(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_countVoteMint(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "countVoteMint",
      "countVoteMint(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  countVoteUri(param0: BigInt): BigInt {
    let result = super.call("countVoteUri", "countVoteUri(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_countVoteUri(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "countVoteUri",
      "countVoteUri(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  demask(): Address {
    let result = super.call("demask", "demask():(address)", []);

    return result[0].toAddress();
  }

  try_demask(): ethereum.CallResult<Address> {
    let result = super.tryCall("demask", "demask():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  existLaunchPad(_launchpad: Address): boolean {
    let result = super.call(
      "existLaunchPad",
      "existLaunchPad(address):(bool)",
      [ethereum.Value.fromAddress(_launchpad)]
    );

    return result[0].toBoolean();
  }

  try_existLaunchPad(_launchpad: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "existLaunchPad",
      "existLaunchPad(address):(bool)",
      [ethereum.Value.fromAddress(_launchpad)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  exists(id: BigInt): boolean {
    let result = super.call("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toBoolean();
  }

  try_exists(id: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  feeLockDemask(): BigInt {
    let result = super.call("feeLockDemask", "feeLockDemask():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeLockDemask(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeLockDemask",
      "feeLockDemask():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getList(_owner: Address): Array<BigInt> {
    let result = super.call("getList", "getList(address):(uint256[])", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigIntArray();
  }

  try_getList(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getList", "getList(address):(uint256[])", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLaunchPad(param0: Address): boolean {
    let result = super.call("isLaunchPad", "isLaunchPad(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isLaunchPad(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLaunchPad", "isLaunchPad(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMint(param0: BigInt): boolean {
    let result = super.call("isMint", "isMint(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isMint(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMint", "isMint(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  receiver(): Address {
    let result = super.call("receiver", "receiver():(address)", []);

    return result[0].toAddress();
  }

  try_receiver(): ethereum.CallResult<Address> {
    let result = super.tryCall("receiver", "receiver():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referral(): Address {
    let result = super.call("referral", "referral():(address)", []);

    return result[0].toAddress();
  }

  try_referral(): ethereum.CallResult<Address> {
    let result = super.tryCall("referral", "referral():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(id: BigInt): BigInt {
    let result = super.call("totalSupply", "totalSupply(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toBigInt();
  }

  try_totalSupply(id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSupply",
      "totalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uri(_id: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);

    return result[0].toString();
  }

  try_uri(_id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  uservote(
    param0: Address,
    param1: BigInt,
    param2: BigInt,
    param3: BigInt
  ): BigInt {
    let result = super.call(
      "uservote",
      "uservote(address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3)
      ]
    );

    return result[0].toBigInt();
  }

  try_uservote(
    param0: Address,
    param1: BigInt,
    param2: BigInt,
    param3: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "uservote",
      "uservote(address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votemint(param0: BigInt, param1: BigInt): CreatorContract__votemintResult {
    let result = super.call(
      "votemint",
      "votemint(uint256,uint256):(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new CreatorContract__votemintResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBoolean(),
      result[9].toBoolean()
    );
  }

  try_votemint(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<CreatorContract__votemintResult> {
    let result = super.tryCall(
      "votemint",
      "votemint(uint256,uint256):(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CreatorContract__votemintResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBoolean(),
        value[9].toBoolean()
      )
    );
  }

  voteuri(param0: BigInt, param1: BigInt): CreatorContract__voteuriResult {
    let result = super.call(
      "voteuri",
      "voteuri(uint256,uint256):(address,uint256,uint256,uint256,string,uint256,uint256,bool,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new CreatorContract__voteuriResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toString(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBoolean()
    );
  }

  try_voteuri(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<CreatorContract__voteuriResult> {
    let result = super.tryCall(
      "voteuri",
      "voteuri(uint256,uint256):(address,uint256,uint256,uint256,string,uint256,uint256,bool,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CreatorContract__voteuriResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toString(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _WETH(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _demask(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _feeLockDemask(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _referral(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddRouterCall extends ethereum.Call {
  get inputs(): AddRouterCall__Inputs {
    return new AddRouterCall__Inputs(this);
  }

  get outputs(): AddRouterCall__Outputs {
    return new AddRouterCall__Outputs(this);
  }
}

export class AddRouterCall__Inputs {
  _call: AddRouterCall;

  constructor(call: AddRouterCall) {
    this._call = call;
  }

  get _router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddRouterCall__Outputs {
  _call: AddRouterCall;

  constructor(call: AddRouterCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class Change_uri_with_voteCall extends ethereum.Call {
  get inputs(): Change_uri_with_voteCall__Inputs {
    return new Change_uri_with_voteCall__Inputs(this);
  }

  get outputs(): Change_uri_with_voteCall__Outputs {
    return new Change_uri_with_voteCall__Outputs(this);
  }
}

export class Change_uri_with_voteCall__Inputs {
  _call: Change_uri_with_voteCall;

  constructor(call: Change_uri_with_voteCall) {
    this._call = call;
  }

  get _count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Change_uri_with_voteCall__Outputs {
  _call: Change_uri_with_voteCall;

  constructor(call: Change_uri_with_voteCall) {
    this._call = call;
  }
}

export class ClaimRewardCall extends ethereum.Call {
  get inputs(): ClaimRewardCall__Inputs {
    return new ClaimRewardCall__Inputs(this);
  }

  get outputs(): ClaimRewardCall__Outputs {
    return new ClaimRewardCall__Outputs(this);
  }
}

export class ClaimRewardCall__Inputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }
}

export class ClaimRewardCall__Outputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }
}

export class Launchpad_submitCall extends ethereum.Call {
  get inputs(): Launchpad_submitCall__Inputs {
    return new Launchpad_submitCall__Inputs(this);
  }

  get outputs(): Launchpad_submitCall__Outputs {
    return new Launchpad_submitCall__Outputs(this);
  }
}

export class Launchpad_submitCall__Inputs {
  _call: Launchpad_submitCall;

  constructor(call: Launchpad_submitCall) {
    this._call = call;
  }

  get launchpad_information(): Launchpad_submitCallLaunchpad_informationStruct {
    return changetype<Launchpad_submitCallLaunchpad_informationStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _url(): string {
    return this._call.inputValues[1].value.toString();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class Launchpad_submitCall__Outputs {
  _call: Launchpad_submitCall;

  constructor(call: Launchpad_submitCall) {
    this._call = call;
  }
}

export class Launchpad_submitCallLaunchpad_informationStruct extends ethereum.Tuple {
  get creator(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get initial(): BigInt {
    return this[2].toBigInt();
  }

  get totalSell(): BigInt {
    return this[3].toBigInt();
  }

  get percentLock(): BigInt {
    return this[4].toBigInt();
  }

  get price(): BigInt {
    return this[5].toBigInt();
  }

  get priceListing(): BigInt {
    return this[6].toBigInt();
  }

  get tokenPayment(): Address {
    return this[7].toAddress();
  }

  get startTime(): BigInt {
    return this[8].toBigInt();
  }

  get endTime(): BigInt {
    return this[9].toBigInt();
  }

  get durationLock(): BigInt {
    return this[10].toBigInt();
  }

  get maxbuy(): BigInt {
    return this[11].toBigInt();
  }

  get refundType(): boolean {
    return this[12].toBoolean();
  }

  get whiteList(): boolean {
    return this[13].toBoolean();
  }

  get percentReferral(): BigInt {
    return this[14].toBigInt();
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _url(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class Mint_with_voteCall extends ethereum.Call {
  get inputs(): Mint_with_voteCall__Inputs {
    return new Mint_with_voteCall__Inputs(this);
  }

  get outputs(): Mint_with_voteCall__Outputs {
    return new Mint_with_voteCall__Outputs(this);
  }
}

export class Mint_with_voteCall__Inputs {
  _call: Mint_with_voteCall;

  constructor(call: Mint_with_voteCall) {
    this._call = call;
  }

  get _count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Mint_with_voteCall__Outputs {
  _call: Mint_with_voteCall;

  constructor(call: Mint_with_voteCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class Submit_vote_change_uriCall extends ethereum.Call {
  get inputs(): Submit_vote_change_uriCall__Inputs {
    return new Submit_vote_change_uriCall__Inputs(this);
  }

  get outputs(): Submit_vote_change_uriCall__Outputs {
    return new Submit_vote_change_uriCall__Outputs(this);
  }
}

export class Submit_vote_change_uriCall__Inputs {
  _call: Submit_vote_change_uriCall;

  constructor(call: Submit_vote_change_uriCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get startVote(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get endVote(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get uri_(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class Submit_vote_change_uriCall__Outputs {
  _call: Submit_vote_change_uriCall;

  constructor(call: Submit_vote_change_uriCall) {
    this._call = call;
  }
}

export class Submit_vote_mint_tokenCall extends ethereum.Call {
  get inputs(): Submit_vote_mint_tokenCall__Inputs {
    return new Submit_vote_mint_tokenCall__Inputs(this);
  }

  get outputs(): Submit_vote_mint_tokenCall__Outputs {
    return new Submit_vote_mint_tokenCall__Outputs(this);
  }
}

export class Submit_vote_mint_tokenCall__Inputs {
  _call: Submit_vote_mint_tokenCall;

  constructor(call: Submit_vote_mint_tokenCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get startVote(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get endVote(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get totalMint(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class Submit_vote_mint_tokenCall__Outputs {
  _call: Submit_vote_mint_tokenCall;

  constructor(call: Submit_vote_mint_tokenCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get option(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get count(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class Unlock_voteCall extends ethereum.Call {
  get inputs(): Unlock_voteCall__Inputs {
    return new Unlock_voteCall__Inputs(this);
  }

  get outputs(): Unlock_voteCall__Outputs {
    return new Unlock_voteCall__Outputs(this);
  }
}

export class Unlock_voteCall__Inputs {
  _call: Unlock_voteCall;

  constructor(call: Unlock_voteCall) {
    this._call = call;
  }

  get option(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _count(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Unlock_voteCall__Outputs {
  _call: Unlock_voteCall;

  constructor(call: Unlock_voteCall) {
    this._call = call;
  }
}

export class Vote_mint_tokenCall extends ethereum.Call {
  get inputs(): Vote_mint_tokenCall__Inputs {
    return new Vote_mint_tokenCall__Inputs(this);
  }

  get outputs(): Vote_mint_tokenCall__Outputs {
    return new Vote_mint_tokenCall__Outputs(this);
  }
}

export class Vote_mint_tokenCall__Inputs {
  _call: Vote_mint_tokenCall;

  constructor(call: Vote_mint_tokenCall) {
    this._call = call;
  }

  get _count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Vote_mint_tokenCall__Outputs {
  _call: Vote_mint_tokenCall;

  constructor(call: Vote_mint_tokenCall) {
    this._call = call;
  }
}

export class Vote_uri_tokenCall extends ethereum.Call {
  get inputs(): Vote_uri_tokenCall__Inputs {
    return new Vote_uri_tokenCall__Inputs(this);
  }

  get outputs(): Vote_uri_tokenCall__Outputs {
    return new Vote_uri_tokenCall__Outputs(this);
  }
}

export class Vote_uri_tokenCall__Inputs {
  _call: Vote_uri_tokenCall;

  constructor(call: Vote_uri_tokenCall) {
    this._call = call;
  }

  get _count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Vote_uri_tokenCall__Outputs {
  _call: Vote_uri_tokenCall;

  constructor(call: Vote_uri_tokenCall) {
    this._call = call;
  }
}
